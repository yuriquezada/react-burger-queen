{"version":3,"sources":["components/Header.js","config/firebase.js","functions/use-message.js","functions/add-order.js","components/product-list/product.js","components/product-list/product-list.js","components/product-order/order-list.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","src","alt","db","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","useMessage","path","useState","messages","setMessages","useEffect","collection","onSnapshot","snapshot","newMessages","docs","map","doc","id","data","console","log","handleClick","e","preventDefault","Product","props","length","message","onClick","key","item","image","price","ProductList","role","data-toggle","aria-controls","aria-selected","aria-labelledby","OrderList","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79af1476.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#/\"><img src=\"image/logo2.png\" className=\"card-img-top\" alt=\"...\" /></a>\n       \n      </nav>\n    </header>\n  );\n}\n\nexport default Header;","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCtgymKSWV62YN8zimGsMlfDc0mruTi2qM\",\n  authDomain: \"burguer-queen-234c8.firebaseapp.com\",\n  databaseURL: \"https://burguer-queen-234c8.firebaseio.com\",\n  projectId: \"burguer-queen-234c8\",\n  storageBucket: \"burguer-queen-234c8.appspot.com\",\n  messagingSenderId: \"41829269712\",\n  appId: \"1:41829269712:web:c3ddee7e215289bcd31ed5\"\n};\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n\n//Firestore\nconst db = firebaseApp.firestore();\n\nexport default db;","import { useState, useEffect } from 'react';\nimport db from '../config/firebase'\n\nconst useMessage = (path) => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    db.collection(path)\n    .onSnapshot((snapshot) => {\n      const newMessages=snapshot.docs.map((doc)=>({\n        id: doc.id,\n        ...doc.data()\n      }))\n\n      setMessages(newMessages);\n    })\n  }, [path]);\n\n  // const listenForMessages = () => {\n\n  // }\n  console.log(messages, 'no sÃ© que es')\n  return messages;\n}\n\nexport default useMessage;\n","// const orderList = [];\n// console.log(orderList, 'este es el arreglo orderlist');\n// const addOrder=()=>{\n//   orderList.push({iterm : 'elnombre', price: 'elprecio'})\n//   // return orderList;\n// }\n\n// export default addOrder;\n\nconst handleClick=(e)=> {\n  e.preventDefault();\n  console.log('The link was clicked.');\n}\n\nexport default handleClick;","import React from 'react';\nimport useMessage from '../../functions/use-message'\nimport handleClick from '../../functions/add-order'\n\nconst Product = (props) => {\n  const messages = useMessage(props.path);\n  console.log(messages, 'es el arreglo dentro de Product', messages.length);\n  return (\n    <div className=\"row ml-0 mr-0 py-3 px-4\">{\n      messages.map((message) =>\n      <div className=\"p-3 col-xl-4 col-lg-6 col-md-6\" onClick={handleClick} key={message.item}>\n        <div className=\"card \">\n          <img src={message.image} className=\"card-img-top\" alt=\"...\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{message.item}</h5>\n          </div>\n          <div className=\"card-footer d-flex justify-content-center flex-column align-items-center\">\n          <h5 className=\"card-title\">$ {message.price}</h5>\n            <a href=\"https://github.com/\" className=\"btn btn-primary\">Add</a>\n          </div>\n        </div>\n        </div>\n      )\n    }</div>\n\n  );\n};\nexport default Product;\n\n// <div className=\"card\" onClick={handleClick} key={index}>\n//   <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\n//   <div className=\"card-body\">\n//     <h5 className=\"card-title\">{message.item}</h5>\n//     <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n//   </div>\n//   <div className=\"card-footer\">\n//     <small className=\"text-muted\">Last updated 3 mins ago</small>\n//     <a href=\"https://github.com/\" className=\"btn btn-primary\">Go somewhere</a>\n//   </div>\n// </div>","import React from 'react';\nimport Product from './product'\n\nfunction ProductList() {\n  return (\n    <div className=\"col-sm\">\n      <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n        <li className=\"nav-item col-md-6 p-0\">\n          <a className=\"nav-link text-center active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Breakfast</a>\n        </li>\n        <li className=\"nav-item col-md-6 p-0\">\n          <a className=\"nav-link text-center\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#profile\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Lunch - Dinner</a>\n        </li>\n      </ul>\n      <div className=\"tab-content\" id=\"myTabContent\">\n        <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n          <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n            <li className=\"nav-item col p-0\">\n              <a className=\"nav-link text-center active\" id=\"d_Sandwich-tab\" data-toggle=\"tab\" href=\"#d_Sandwich\" role=\"tab\" aria-controls=\"d_Sandwich\" aria-selected=\"true\">Sandwich</a>\n            </li>\n            <li className=\"nav-item col p-0\">\n              <a className=\"nav-link text-center\" id=\"d_Drink-tab\" data-toggle=\"tab\" href=\"#d_Drink\" role=\"tab\" aria-controls=\"d_Drink\" aria-selected=\"false\">Drink</a>\n            </li>\n          </ul>\n          <div className=\"tab-content\" id=\"myTabContent\">\n            <div className=\"tab-pane fade show active\" id=\"d_Sandwich\" role=\"tabpanel\" aria-labelledby=\"d_Sandwich-tab\"><Product path={'/menu/menuA/sandwich'}/></div>\n            <div className=\"tab-pane fade\" id=\"d_Drink\" role=\"tabpanel\" aria-labelledby=\"d_Drink-tab\"><Product path={'/menu/menuA/drink'}/></div>\n          </div>\n        </div>\n\n        <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\n          <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n            <li className=\"nav-item col p-0\">\n              <a className=\"nav-link text-center active\" id=\"a_Burger-tab\" data-toggle=\"tab\" href=\"#a_Burger\" role=\"tab\" aria-controls=\"a_Burger\" aria-selected=\"true\">Burger</a>\n            </li>\n            <li className=\"nav-item col p-0\">\n              <a className=\"nav-link text-center\" id=\"a_Accompaniment-tab\" data-toggle=\"tab\" href=\"#a_Accompaniment\" role=\"tab\" aria-controls=\"a_Accompaniment\" aria-selected=\"false\">Side dish</a>\n            </li>\n            <li className=\"nav-item col p-0\">\n              <a className=\"nav-link text-center\" id=\"a_Drink-tab\" data-toggle=\"tab\" href=\"#a_Drink\" role=\"tab\" aria-controls=\"a_Drink\" aria-selected=\"false\">Drink</a>\n            </li>\n          </ul>\n          <div className=\"tab-content\" id=\"myTabContent\">\n            <div className=\"tab-pane fade show active\" id=\"a_Burger\" role=\"tabpanel\" aria-labelledby=\"a_Burger-tab\"><Product path={'/menu/menuB/burger'}/></div>\n            <div className=\"tab-pane fade\" id=\"a_Accompaniment\" role=\"tabpanel\" aria-labelledby=\"a_Accompaniment-tab\"><Product path={'/menu/menuB/side-dish'}/></div>\n            <div className=\"tab-pane fade\" id=\"a_Drink\" role=\"tabpanel\" aria-labelledby=\"a_Drink-tab\"><Product path={'/menu/menuB/drink'}/></div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default ProductList;","import React from 'react';\n\nconst OrderList=()=>{\n  return(\n    <div className=\"col-sm\">\n      <h2>Order List</h2>\n      \n    </div>\n  );\n}\n\nexport default OrderList;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport ProductList from './components/product-list/product-list';\nimport OrderList from './components/product-order/order-list';\n// import Product from './components/product-list/Product';\n// import db from './config/firebase'\n\n\n\nconst App = ()=>{\n    return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"row\">\n        <ProductList />\n        <OrderList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}